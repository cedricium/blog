{"componentChunkName":"component---src-templates-blog-post-js","path":"/searching-git-history/","result":{"data":{"site":{"siteMetadata":{"title":"My Random Thoughts","author":"Cedric Amaya"}},"markdownRemark":{"id":"8616cd1f-da6b-5dfe-be52-eb05697b7dcc","excerpt":"tl;dr When you need to see when a specific piece of code was introduced or deleted in your\ncodebase, use the following command: Problem A…","html":"<h2>tl;dr</h2>\n<p>When you need to see when a specific piece of code was introduced or deleted in your\ncodebase, use the following command:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> log -S<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>options<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>-- <span class=\"token operator\">&lt;</span>path<span class=\"token operator\">></span>…<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></code></pre></div>\n<h2>Problem</h2>\n<p>A few times a month, a coworker of mine will ask to see what the code for a given\nevent does (they do not have access to our company’s GitHub repos). This particular\ncoworker is the company’s go-to person for all things related to Splunk since they\nmanage the graphs and create queries based on the data coming in from our service.\nHaving an idea of what the code does for any given event is helpful when\ndebugging—thus the reason they ask to see the code.</p>\n<p>We always begin by using GitHub’s search functionality and search for the event\nby its name (e.g. “reports-get-manifest-error”). Usually this will show us the\nrelevant parts of the code like where this event was defined and where it is\nhandled.</p>\n<p>Recently, however, searching for a specific result on GitHub yielded no results.\nStrange—that had never happened before.</p>\n<p>The last time that particular event was triggered was two years ago, so we thought\nit was definitely possible the event was removed from the code since then. Although\nmy coworker had no need to investigate further, I was curious as to when this event\nbecame deprecated. So I did what I do best when I don’t know something and turned\nto Google. I don’t remember what exactly I googled but it must have been something\nalong the lines of “git search deleted code”, and sure enough, <code class=\"language-text\">git</code> did in fact have\nthis very capability.</p>\n<h2>Solution</h2>\n<p>In order to see when some particular code is added or removed, you can use the <code class=\"language-text\">git log</code>\ncommand. Specifically, you will want to pass the <code class=\"language-text\">-S &lt;string&gt;</code> flag which tells git\nto “look for differences that introduce or remove an instance of string.”<sup>1</sup></p>\n<p>Given the dilemma outlined above, what I did was use the <code class=\"language-text\">git log</code> command along with\nthe event passed to the <code class=\"language-text\">-S</code> flag (I also added the path to the file where the\nevent should have been):</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> log -S <span class=\"token string\">\"reports-get-manifest-error\"</span> -- src/controllers/policy-evaluation.js</code></pre></div>\n<p>After running this command, I was presented with two commits: one where the\n“reports-get-manifest-error” event was originally introduced in the codebase,\nand the other where it was removed.</p>\n<hr>\n<ol>\n<li><code class=\"language-text\">git log -S&lt;string&gt;</code> documentation:\n<a href=\"https://git-scm.com/docs/git-log#Documentation/git-log.txt--Sltstringgt\">https://git-scm.com/docs/git-log#Documentation/git-log.txt—Sltstringgt</a></li>\n</ol>","timeToRead":2,"frontmatter":{"title":"Searching Git History","date":"December 24, 2019","draft":false}}},"pageContext":{"slug":"/searching-git-history/","previous":{"fields":{"slug":"/expressjs-accessing-req-params-from-child-routers/"},"frontmatter":{"title":"Express: Accessing `req.params` in nested/child routers"}},"next":{"fields":{"slug":"/just-do-it/"},"frontmatter":{"title":"Just Do It"}}}}}