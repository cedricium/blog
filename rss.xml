<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[My Random Thoughts]]></title><description><![CDATA[Essays, musings, and more by Cedric Amaya.]]></description><link>https://cedric.tech/blog</link><generator>RSS for Node</generator><lastBuildDate>Mon, 10 Feb 2020 23:21:26 GMT</lastBuildDate><item><title><![CDATA[Just Do It]]></title><description><![CDATA[I’m naturally a very reserved person. Like many introverts, I steer clear of
confrontation and rarely do I post anything intimate on social…]]></description><link>https://cedric.tech/blog/just-do-it/</link><guid isPermaLink="false">https://cedric.tech/blog/just-do-it/</guid><pubDate>Mon, 10 Feb 2020 15:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I’m naturally a very reserved person. Like many introverts, I steer clear of
confrontation and rarely do I post anything intimate on social media. As much as
I hate to admit it, I also fear criticism and find it hard to differentiate a
critique of my work from myself as a person. Because of this, I don’t often
share the things I’m working on.&lt;/p&gt;
&lt;p&gt;Sad, but true. I’m working on it though, I promise.&lt;/p&gt;
&lt;p&gt;At the turn of the new year, &lt;a href=&quot;https://twitter.com/CedricAmaya/status/1212565348471328768?s=20&quot;&gt;I tweeted I was going to be more open and vulnerable&lt;/a&gt;
since I wanted to better myself after a not-so-great 2019.&lt;/p&gt;
&lt;p&gt;So when I came across an Ask Hacker News (Ask HN) thread asking “What interesting
problems are you working on?”, I forced myself to contribute to the conversation
rather than just read all of the comments. What resulted is not what I had
expected.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Before delving further into the story, let it be known that the Hacker News
community isn’t the most subtle when it comes to critiquing others’ work. For
instance,
&lt;a href=&quot;https://news.ycombinator.com/item?id=9224&quot;&gt;there’s the infamous Dropbox comment&lt;/a&gt;
among others.&lt;/p&gt;
&lt;p&gt;To get a better picture of Hacker News as a whole, I highly recommend reading
&lt;em&gt;The New Yorker&lt;/em&gt; article,
&lt;a href=&quot;https://www.newyorker.com/news/letter-from-silicon-valley/the-lonely-work-of-moderating-hacker-news&quot;&gt;&lt;em&gt;The Lonely Work of Moderating Hacker News&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;At this point, hopefully you can see why it can be intimidating to show off your
work on Hacker News, especially as a budding developer like myself. But there’s
a reason why people continue to do so: the power of Hacker News can be immense.
The traffic alone to the site you are showcasing is known to be so overwhelming
that it causes entire sites to go offline.&lt;/p&gt;
&lt;p&gt;Simply put, it is like a badge of honor to be accepted by the Hacker News crowd.
And because of the decision I made to break out of my usual habit of consuming
media and instead contribute to the Ask HN thread, I was able to get a small
glimpse of said power.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;As teased above, I ended up
&lt;a href=&quot;https://news.ycombinator.com/item?id=22177077&quot;&gt;commenting about my long-time side project&lt;/a&gt;,
Unearth. At the time of commenting, Unearth was still a bare-bones MVP. The
website was a simple React application that had no styling besides the landing
page.&lt;/p&gt;
&lt;p&gt;To my surprise, nobody batted an eye about it. What mattered most was the fact
that my app worked and it solved a pain point that users themselves faced. Even
more surprising, I was praised for the quick and easy no-BS onboarding process which takes
less than a minute to complete. As cheesy as it sounds, I was ecstatic. So much
so to the point I was hooting and hollering.&lt;/p&gt;
&lt;p&gt;As the hours passed, more and more users replied to my comment, many of them
leaving valuable suggestions and constructive criticism which I made sure to
take the time to respond to and make note of for future improvements to Unearth.&lt;/p&gt;
&lt;p&gt;Before commenting, I had done a little marketing on Reddit by answering
questions related to Reddit’s save functionality in meta subreddits like r/help,
r/ideasfortheadmins, and r/beta. After answering the original poster’s question,
I would then plug Unearth. This had resulted in a grand total of seven users
signing up. Of those, only a handful actually completed the onboarding process
necessary to receive their personalized newsletters.&lt;/p&gt;
&lt;p&gt;As of today, post-Hacker News comment, the numbers stand at:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;15,000+ Reddit comments and posts (things) queued for surfacing&lt;/li&gt;
&lt;li&gt;2,000+ things already surfaced and delivered&lt;/li&gt;
&lt;li&gt;400+ emails delivered&lt;/li&gt;
&lt;li&gt;62 users registered and authenticated via Reddit&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This has been a huge win for someone like myself who never shares their work.
What’s great is this isn’t even close to the end for Unearth—I’m just getting
started. Soon I will get Unearth into the hands of an even larger audience once
I make actual posts on Show HN, Reddit, and Product Hunt rather than commenting.&lt;/p&gt;
&lt;p&gt;What I find most intriguing about this entire experience is I knew all of this
could happen. I have read countless of other stories similar to this one and I
knew what I needed to do in order to make it happen, I just never did.&lt;/p&gt;
&lt;p&gt;Having recently read James Clear’s &lt;em&gt;Atomic Habits&lt;/em&gt;, I now know this is what he
refers to as
&lt;a href=&quot;https://jamesclear.com/taking-action&quot;&gt;“being in motion” as opposed to “taking action”&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Moral of the story is this: just do it. Really. You will be surprised by the
results, and you will never know unless you put in the effort. So just do it.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Searching Git History]]></title><description><![CDATA[tl;dr When you need to see when a specific piece of code was introduced or deleted in your
codebase, use the following command: Problem A…]]></description><link>https://cedric.tech/blog/searching-git-history/</link><guid isPermaLink="false">https://cedric.tech/blog/searching-git-history/</guid><pubDate>Tue, 24 Dec 2019 21:00:00 GMT</pubDate><content:encoded>&lt;h2&gt;tl;dr&lt;/h2&gt;
&lt;p&gt;When you need to see when a specific piece of code was introduced or deleted in your
codebase, use the following command:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;sh&quot;&gt;&lt;pre class=&quot;language-sh&quot;&gt;&lt;code class=&quot;language-sh&quot;&gt;$ git log -S&amp;lt;string&amp;gt; [&amp;lt;options&amp;gt; [-- &amp;lt;path&amp;gt;…]]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Problem&lt;/h2&gt;
&lt;p&gt;A few times a month, a coworker of mine will ask to see what the code for a given
event does (they do not have access to our company’s GitHub repos). This particular
coworker is the company’s go-to person for all things related to Splunk since they
manage the graphs and create queries based on the data coming in from our service.
Having an idea of what the code does for any given event is helpful when
debugging—thus the reason they ask to see the code.&lt;/p&gt;
&lt;p&gt;We always begin by using GitHub’s search functionality and search for the event
by its name (e.g. “reports-get-manifest-error”). Usually this will show us the
relevant parts of the code like where this event was defined and where it is
handled.&lt;/p&gt;
&lt;p&gt;Recently, however, searching for a specific result on GitHub yielded no results.
Strange—that had never happened before.&lt;/p&gt;
&lt;p&gt;The last time that particular event was triggered was two years ago, so we thought
it was definitely possible the event was removed from the code since then. Although
my coworker had no need to investigate further, I was curious as to when this event
became deprecated. So I did what I do best when I don’t know something and turned
to Google. I don’t remember what exactly I googled but it must have been something
along the lines of “git search deleted code”, and sure enough, &lt;code class=&quot;language-text&quot;&gt;git&lt;/code&gt; did in fact have
this very capability.&lt;/p&gt;
&lt;h2&gt;Solution&lt;/h2&gt;
&lt;p&gt;In order to see when some particular code is added or removed, you can use the &lt;code class=&quot;language-text&quot;&gt;git log&lt;/code&gt;
command. Specifically, you will want to pass the &lt;code class=&quot;language-text&quot;&gt;-S &amp;lt;string&amp;gt;&lt;/code&gt; flag which tells git
to “look for differences that introduce or remove an instance of string.”&lt;sup&gt;1&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;Given the dilemma outlined above, what I did was use the &lt;code class=&quot;language-text&quot;&gt;git log&lt;/code&gt; command along with
the event passed to the &lt;code class=&quot;language-text&quot;&gt;-S&lt;/code&gt; flag (I also added the path to the file where the
event should have been):&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;sh&quot;&gt;&lt;pre class=&quot;language-sh&quot;&gt;&lt;code class=&quot;language-sh&quot;&gt;$ git log -S &amp;quot;reports-get-manifest-error&amp;quot; -- src/controllers/policy-evaluation.js&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After running this command, I was presented with two commits: one where the
“reports-get-manifest-error” event was originally introduced in the codebase,
and the other where it was removed.&lt;/p&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;git log -S&amp;lt;string&amp;gt;&lt;/code&gt; documentation:
&lt;a href=&quot;https://git-scm.com/docs/git-log#Documentation/git-log.txt--Sltstringgt&quot;&gt;https://git-scm.com/docs/git-log#Documentation/git-log.txt—Sltstringgt&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content:encoded></item><item><title><![CDATA[Express: Accessing `req.params` in nested/child routers]]></title><description><![CDATA[This past week marks the beginning of the backend portion of my studies at Lambda
School, which means I am approximately a fourth of the way…]]></description><link>https://cedric.tech/blog/expressjs-accessing-req-params-from-child-routers/</link><guid isPermaLink="false">https://cedric.tech/blog/expressjs-accessing-req-params-from-child-routers/</guid><pubDate>Sun, 28 Jul 2019 10:35:00 GMT</pubDate><content:encoded>&lt;p&gt;This past week marks the beginning of the backend portion of my studies at Lambda
School, which means I am approximately a fourth of the way complete with the
program! During the frontend portion, we took a deep dive into JavaScript
fundamentals before moving onto React.js and the Single Page Application ecosystem.
Now on the backend, my peers and I are utilizing our JavaScript chops to build
RESTful APIs using Node.js and Express. &lt;/p&gt;
&lt;p&gt;One week in and I already found myself dealing with an interesting issue. Allow
me to provide some background information.&lt;/p&gt;
&lt;h2&gt;Background&lt;/h2&gt;
&lt;p&gt;The task at hand was to utilize Express to build a REST API. You can think of
this backend server as handling a blog, where there are &lt;code class=&quot;language-text&quot;&gt;Posts&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;Comments&lt;/code&gt;
models. Another requirement of this project was to use an Express &lt;code class=&quot;language-text&quot;&gt;Router&lt;/code&gt; object
to separate and organize the various routes needing implementation later on.&lt;/p&gt;
&lt;p&gt;My first order of business was to create a &lt;code class=&quot;language-text&quot;&gt;posts&lt;/code&gt; router to handle HTTP requests
on the &lt;code class=&quot;language-text&quot;&gt;/api/posts&lt;/code&gt; route:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;/* routes/posts/index.js */&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; postsRouter &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;express&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Router&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

postsRouter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;/&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;req&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; res&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;

module&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exports &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; postsRouter


&lt;span class=&quot;token comment&quot;&gt;/* server.js */&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; express &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;express&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; server &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;express&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; postsRouter &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;./routes/posts&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

server&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;/api/posts&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; postsRouter&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Though not required, I thought it best to also separate the comments from the
posts, so I defined a second router for the &lt;code class=&quot;language-text&quot;&gt;comments&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;/* routes/comments/index.js */&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; commentsRouter &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;express&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Router&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

module&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exports &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; commentsRouter

&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;/* routes/posts/index.js */&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; commentsRouter &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;./routes/comments&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

postsRouter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;/:id/comments&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; commentsRouter&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;The Problem&lt;/h2&gt;
&lt;p&gt;As you can see, any CRUD operations on &lt;code class=&quot;language-text&quot;&gt;comments&lt;/code&gt; would need to be handled via
the &lt;code class=&quot;language-text&quot;&gt;/api/posts/:id/comments&lt;/code&gt; route, thus relying on a specific post &lt;code class=&quot;language-text&quot;&gt;id&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The issue I ran into was when I attempted to read the &lt;code class=&quot;language-text&quot;&gt;req.params.id&lt;/code&gt; from the
nested/child comments router, I was met with &lt;code class=&quot;language-text&quot;&gt;undefined&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;/* routes/comments/index.js */&lt;/span&gt;

commentsRouter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;/&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;req&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; res&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; postId &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; req&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;params&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;id  &lt;span class=&quot;token comment&quot;&gt;// ==&gt; would return `undefined`&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After a little debugging and googling, I discovered that by default Express
does not pass the &lt;code class=&quot;language-text&quot;&gt;req.params&lt;/code&gt; to child routers. Because the line:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;postsRouter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;/:id/comments&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; commentsRouter&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;was defined in &lt;code class=&quot;language-text&quot;&gt;routes/posts/index.js&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;commentsRouter&lt;/code&gt; could not access
that post &lt;code class=&quot;language-text&quot;&gt;id&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Initially, I thought to eliminate &lt;code class=&quot;language-text&quot;&gt;commentsRouter&lt;/code&gt; entirely and move all of its
route handlers to &lt;code class=&quot;language-text&quot;&gt;postsRouter&lt;/code&gt;. This would effectively give &lt;code class=&quot;language-text&quot;&gt;commentsRouter&lt;/code&gt;
access to all &lt;code class=&quot;language-text&quot;&gt;req.params&lt;/code&gt; by being in the same scope as its parent path
(&lt;code class=&quot;language-text&quot;&gt;/api/posts/:id&lt;/code&gt;). This, however, seemed like a naive fix to the problem and I
felt as though there was a better solution. And there was.&lt;/p&gt;
&lt;h2&gt;Solution&lt;/h2&gt;
&lt;p&gt;When researching a fix for this issue, my attention was brought to the Express
&lt;code class=&quot;language-text&quot;&gt;Router&lt;/code&gt; documentation.&lt;sup&gt;1&lt;/sup&gt; There, I saw that the &lt;code class=&quot;language-text&quot;&gt;Router&lt;/code&gt; instantiation
method documented a property of the optional &lt;code class=&quot;language-text&quot;&gt;options&lt;/code&gt; parameter, a little
something named &lt;code class=&quot;language-text&quot;&gt;mergeParams&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To my excitement, this property (set by default to &lt;code class=&quot;language-text&quot;&gt;false&lt;/code&gt;) does the following:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Preserve the req.params values from the parent router. If the parent and the
child have conflicting param names, the child’s value take precedence.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To put that into context, by setting that property to &lt;code class=&quot;language-text&quot;&gt;true&lt;/code&gt;, I could then keep
my &lt;code class=&quot;language-text&quot;&gt;postsRouter&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;commentsRouter&lt;/code&gt; separated &lt;em&gt;and&lt;/em&gt; access the post &lt;code class=&quot;language-text&quot;&gt;id&lt;/code&gt;
in &lt;code class=&quot;language-text&quot;&gt;commentsRouter&lt;/code&gt; via &lt;code class=&quot;language-text&quot;&gt;req.params&lt;/code&gt;. That was it, just the fix I needed!&lt;/p&gt;
&lt;p&gt;One small addition to the code and my original setup now works:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;/* routes/comments/index.js */&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; commentsRouter &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;express&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Router&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; mergeParams&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
           &lt;span class=&quot;token comment&quot;&gt;// note the addition of `mergeParams` ^^^^^^^^^^^^^^^^^^^^^&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;

commentsRouter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;/&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;req&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; res&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; postId &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; req&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;params&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;id  &lt;span class=&quot;token comment&quot;&gt;// ==&gt; this now works 🎉&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you would like to get a better understanding of what’s going behind the scenes
or you just want to see the code, feel free to check it out on GitHub.&lt;sup&gt;2&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;It’s being able to solve little problems like this that motivate me to keep
coding. No matter how big or small the victory, I will always be proud of myself
and I look forward to tackling the next one.&lt;/p&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Express &lt;code class=&quot;language-text&quot;&gt;Router&lt;/code&gt; instantiation documentation:
&lt;a href=&quot;https://expressjs.com/en/4x/api.html#express.router&quot;&gt;https://expressjs.com/en/4x/api.html#express.router&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Example code on GitHub:
&lt;a href=&quot;https://github.com/cedricium/webapi-ii-challenge/tree/cedric-amaya&quot;&gt;https://github.com/cedricium/webapi-ii-challenge/tree/cedric-amaya&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content:encoded></item><item><title><![CDATA[Setting Up Continuous Deployments (CD) for a React App using Netlify]]></title><description><![CDATA[A straightforward guide to setting up Continuous Deployment for a React app
hosted on GitHub and deployed using Netlify. Background If you…]]></description><link>https://cedric.tech/blog/deploying-react-app-with-netlify/</link><guid isPermaLink="false">https://cedric.tech/blog/deploying-react-app-with-netlify/</guid><pubDate>Thu, 09 May 2019 12:30:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;em&gt;A straightforward guide to setting up Continuous Deployment for a React app
hosted on GitHub and deployed using Netlify.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Background&lt;/h2&gt;
&lt;p&gt;If you’re reading this, I assume you already know how awesome React.js is. With
tools such as &lt;code class=&quot;language-text&quot;&gt;create-react-app&lt;/code&gt; to help scaffold a basic template in seconds,
getting started with and building your own React apps couldn’t be any easier.&lt;/p&gt;
&lt;p&gt;One aspect of working with modern web apps that can be confusing, however, is
the deployment process; the steps needed in order to have your app accessible
to everyone via the web.&lt;/p&gt;
&lt;p&gt;This tutorial will walk you through setting up Continuous Deployments (CD) for
a React app that has been bootstrapped with &lt;code class=&quot;language-text&quot;&gt;create-react-app&lt;/code&gt; using Netlify.&lt;/p&gt;
&lt;p&gt;CD means a lot like what it sounds like, from Wikipedia:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;a strategy for software releases wherein any code commit that passes the automated
testing phase is automatically released into the production environment, making
changes that are visible to the software’s users.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In researching how to deploy a React app myself, I came across numerous tutorials
describing how to use Netlify’s drag-and-drop functionality or their CLI. These
methods are certainly alright, however, any changes made to your application
require you to repeat the same steps every time to have your deployed app updated.&lt;/p&gt;
&lt;p&gt;With CD, your workflow as a developer doesn’t change minus the initial setup—make
some code changes, commit and push said changes to GitHub, and voila, within
moments your deployed React app should reflect the changes you have made.&lt;/p&gt;
&lt;p&gt;Sounds great, huh? Trust me, it is. Let’s see how it’s done!&lt;/p&gt;
&lt;h2&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;To keep this tutorial short and sweet, I’m going to assume a few things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you have a React app handy which was bootstrapped using &lt;code class=&quot;language-text&quot;&gt;create-react-app&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;said React app is hosted on GitHub or a similar web-based version control
hosting service&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you want to just see how it’s done, I have
&lt;a href=&quot;https://github.com/cedricium/netlify-cd-example&quot;&gt;setup a GitHub repository&lt;/a&gt; which
you can fork and toy with as you follow along.&lt;/p&gt;
&lt;p&gt;If at any point you do run into trouble, feel free to contact me and I’d be happy
to help you out.&lt;/p&gt;
&lt;h2&gt;Netlify Deployments&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Log in or Sign up with Netlify&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Since you have a GitHub account, this should be a breeze. Head over to
&lt;a href=&quot;https://www.netlify.com/&quot;&gt;https://www.netlify.com/&lt;/a&gt; to get started. In the top right corner of their website,
choose whatever option works best for you (either log in or sign up).&lt;/p&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;&lt;strong&gt;Create a New site from git&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We have our amazing React app and want to show it off to the world, right? This
is the way it’s done. Once you’re logged in, there should be a green primary
“New site from Git” button—click it.&lt;/p&gt;
&lt;p&gt;Next, you should be asked to connect to a Git provider. In our case, it will be
GitHub, however, you can also choose GitLab or BitBucket. Click the button
corresponding to your Git provider.&lt;/p&gt;
&lt;p&gt;Now you’ll need to choose which repository you want to link your site on Netlify.
Depending on the settings you chose when authorizing Netlify to use your GitHub
account, you may or may not see all of your repos. If that’s the case, scroll down
to the button of the page and click the link embedded in the “Can’t see your repo
here? Configure the Netlify app on GitHub.” text.&lt;/p&gt;
&lt;p&gt;Once you’ve selected the repo to link the Netlify site to, you should arrive at
the “Deploy settings for &amp;#x3C;your-username&gt;/&amp;#x3C;your-repo&gt;” page.&lt;/p&gt;
&lt;p&gt;If your repo contains a &lt;code class=&quot;language-text&quot;&gt;package.json&lt;/code&gt; and similar config files in the root
directory, Netlify should have been able to figure out this was a React app and
pre-filled the “Basic build settings” such as “Build command” and
“Publish directory”. If that’s your case then all you need to do is click the
“Deploy site” button.&lt;/p&gt;
&lt;p&gt;Otherwise, if your repo uses an unconventional directory structure, move on to
the next section (looking at you Lambda School people). Don’t worry about filling
out the “Basic build settings” inputs for now.&lt;/p&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;&lt;strong&gt;Optionally: Advanced site settings&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So, maybe your React app is nested inside a directory or two. Have no fear, this
poses no problem for us. For now, go ahead and click the “Deploy site” button.&lt;/p&gt;
&lt;p&gt;You will be directed to the main dashboard for your Netlify site. If you check
the url provided for your deployed site, you should be given a “Page Not Found”
error; that’s to be expected since we didn’t specify where Netlify could find the
built React app.&lt;/p&gt;
&lt;p&gt;Find and click “Site settings” from the main dashboard, then select “Build &amp;#x26; deploy”
from the sidebar.&lt;/p&gt;
&lt;p&gt;Under “Build settings”, lets fill out as much as we can by first selecting “Edit
settings”.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Repository:&lt;/strong&gt; this should already be defined, so no need to change anything&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Base directory:&lt;/strong&gt; think of this as the root directory of the React app. For
example, given the repo structure below, our base directory would be &lt;code class=&quot;language-text&quot;&gt;nested&lt;/code&gt;.
If your React app is further nested, you can use &lt;code class=&quot;language-text&quot;&gt;as/many/nests/as/possible&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;netlify-cd-example/
    .gitignore
    README.md
    nested/
        README.md
        package.json
        yarn.lock
        public/
            index.html
            ...
        src/
            App.js
            ...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Build command:&lt;/strong&gt; this is the command Netlify uses to well, build our site. In
case of a React app configured using &lt;code class=&quot;language-text&quot;&gt;create-react-app&lt;/code&gt;, we would type &lt;code class=&quot;language-text&quot;&gt;yarn
build&lt;/code&gt; here.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Publish directory:&lt;/strong&gt; this is the directory from which Netlify actually
serves the built static content. The path from your “Base directory” should
already be filled in, so all we need to add for a React app is &lt;code class=&quot;language-text&quot;&gt;build&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Deploy log visibility:&lt;/strong&gt; fairly self-explanatory, select whichever you want.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And that should be all that is needed to get our React app up and running. Verify
your settings match your repo structure and then click “Save”.&lt;/p&gt;
&lt;p&gt;Select “Deploys” in the top navbar of your dashboard, then under the “Trigger
deploy” dropdown, select “Clear cache and deploy site”. Netlify’s robots will
then start the process of building the React app and deploying it.&lt;/p&gt;
&lt;p&gt;Barring any errors or issues, the deployment will be successful and you can now
check out your live React site by clicking the “Preview deploy” link.&lt;/p&gt;
&lt;p&gt;Cheers! You’ve just deployed your React app. Now any changes you make to the
production branch (default is &lt;code class=&quot;language-text&quot;&gt;master&lt;/code&gt; but can be changed under “Settings &gt;
Build &amp;#x26; deploy &gt; Deploy contexts &gt; Production branch”) will trigger Netlify
bots to auto-build your React app and keep it updated.&lt;/p&gt;
&lt;h2&gt;Caveats &amp;#x26; More&lt;/h2&gt;
&lt;h3&gt;Netlify + React Router&lt;/h3&gt;
&lt;p&gt;If your React application is using the popular &lt;code class=&quot;language-text&quot;&gt;react-router&lt;/code&gt; package, the above
settings may not work out of the box. There is some additional setup needed for
routing to work when deploying a React using Netlify—the article
&lt;a href=&quot;https://medium.com/@sschannaknetlify-and-react-router-1537aebe6256&quot;&gt;&lt;em&gt;Netlify and React Router&lt;/em&gt;&lt;/a&gt;
should put you in the right direction.&lt;/p&gt;
&lt;h3&gt;Advanced Configuration&lt;/h3&gt;
&lt;p&gt;For those of you who like config files, all of the Netlify GUI steps outlined in
this article can be done by specifying the proper values in a &lt;code class=&quot;language-text&quot;&gt;netlify.toml&lt;/code&gt; file
which must reside in the repository’s root directory.&lt;/p&gt;
&lt;p&gt;To learn more about configuring a Netlify site using the &lt;code class=&quot;language-text&quot;&gt;netlify.toml&lt;/code&gt; file, check
out &lt;a href=&quot;https://www.netlify.com/docs/netlify-toml-reference&quot;&gt;the official Netlify docs&lt;/a&gt;.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[On Side Project Addiction]]></title><description><![CDATA[tl;dr: since learning how to code, I’ve become obsessed with building things
with the end-goal of making something worthy enough of landing…]]></description><link>https://cedric.tech/blog/side-project-addiction/</link><guid isPermaLink="false">https://cedric.tech/blog/side-project-addiction/</guid><pubDate>Thu, 04 Apr 2019 12:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;strong&gt;tl;dr: since learning how to code, I’ve become obsessed with building things
with the end-goal of making something worthy enough of landing me a job as a
developer.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A few weeks back, I came across an article on Hacker News that really resonated
with me. The title of that article was “Getting Too Absorbed in Your Side
Projects”&lt;sup&gt;1&lt;/sup&gt; and the topic is hopefully self-explanatory. I’ve written about my own
experiences with side projects and how I go about building them, but one aspect
of side projects I left out was my attitude towards them. Like Bennet, I too
found myself becoming fixated with my side projects, so much so that my mental
health was being negatively effected.&lt;/p&gt;
&lt;p&gt;In this post, I would like to dive deeper into how I became so fixated with
making things, what the consequences were, and the things that have helped me
overcome my fixation.&lt;/p&gt;
&lt;h2&gt;From Initiation to Regular Use&lt;/h2&gt;
&lt;p&gt;Soon after starting my journey of learning how to code back in late 2015, I realized
I wanted to become a software developer. Not knowing what exactly it took to get
a job writing code, I googled “how to become a software developer” and devoured as
much as I could on the subject. After reading various articles and watching
countless YouTube videos, it became apparent that having experience was the common
denominator out of all the advice being given.&lt;/p&gt;
&lt;p&gt;Unlike other professions, however, experience doesn’t necessarily have to be
gained from a professional environment. When it comes to software development,
experience can be gained by contributing to open source software or &lt;em&gt;building your
own projects&lt;/em&gt;—and this is where I got the idea to make my own things.&lt;/p&gt;
&lt;p&gt;Once I realized I could potentially land a job by building side projects, I
never looked back. I started side projects that I thought would be beneficial
to have on my resume: first I made an Android app since I had just learned Java
in school, moving on to simple static websites using HTML and CSS, then on to
browser extensions before working towards building full-fledged web apps.&lt;/p&gt;
&lt;p&gt;In the beginning, ideas were a dime a dozen. As I worked on one side project, I
would have a new idea for the next one. Like many others, the appeal for the new
idea far outweighed the current project I was working on so I would typically
chase the new idea, leaving the old one unfinished.&lt;/p&gt;
&lt;p&gt;This cycle of having an idea, to coding, to sometimes launching, back to having
another idea, soon became another habit of mine, just like having a cup of
coffee every morning. &lt;/p&gt;
&lt;p&gt;But when I didn’t feed into this side project cycle (as I like to call it), my
mental well-being started being negatively-affected.&lt;/p&gt;
&lt;h2&gt;Dependence&lt;/h2&gt;
&lt;p&gt;My side project cycle was so insidious that it
took nearly two years before I realized the extent to which it had a hold on me.
This realization came from finishing a side project one day without an idea lined
up for the next one and feeling panic and somewhat anxious.&lt;/p&gt;
&lt;p&gt;I racked my brain scouring for ideas because I was uncomfortable not spending my
free time working on a side project. This uneasiness lasted for a few days before
I finally came up with an idea for the next project, albeit one that really wasn’t
useful for anyone, myself included.&lt;/p&gt;
&lt;p&gt;Regardless, working on that latest idea made my anxiety and uneasiness go away
so I was happy to be doing &lt;em&gt;something&lt;/em&gt;. Initially, I didn’t give much thought to
the feeling of being uncomfortable with not being productive. It wasn’t until
those same feelings washed over me again that I realized I was dependent on the
side project cycle.&lt;/p&gt;
&lt;p&gt;After this realization, I tried to defend my addiction by reminding myself of the
potential benefits it could have on my career:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Think of all the experience you’ve gained!”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;“Your next side project could be the next Facebook!”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The problem with these statements was that the projects I had made were trivial
in comparison to projects people use to land jobs. Rarely did they solve any
major issue; the projects lacked complexity and depth which meant I would have
a hard time speaking technically about these projects with potential employers.&lt;/p&gt;
&lt;p&gt;This took some time to accept, but once I did come to terms with my unhealthy
habit of building side projects, I began to wean myself from the addictive cycle.&lt;/p&gt;
&lt;h2&gt;Recovery&lt;/h2&gt;
&lt;p&gt;Consuming media for pure enjoyment has been one of the biggest factors in combating
my addition. Watching Netflix, reading books, and playing video games
have all taken out large chunks of time that I would have previously spent
mindlessly coding. These actions have also brought me closer to those I care
about in my life like my girlfriend and best friend.&lt;/p&gt;
&lt;p&gt;When the weather permits, I also enjoy playing football with friends, going on
bike rides, and hiking. For nearly two years, the most exercise I got was from
walking so getting out of the house and being physically active has significantly
improved my well-being.&lt;/p&gt;
&lt;p&gt;Although I still occasionally work on side projects, they no longer have an
addictive grip on me; I feel no obligation to be constantly working on them.
Instead of seeing side projects as a means to an end, I now view them simply
as an end—things I can work on because I enjoy doing them.&lt;/p&gt;
&lt;p&gt;This change in perspective has allowed me to build more complex and meaningful
projects all the while maintaining my sanity.&lt;/p&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://www.bennettnotes.com/post/getting-too-absorbed-into-your-side-projects/&quot;&gt;https://www.bennettnotes.com/post/getting-too-absorbed-into-your-side-projects/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content:encoded></item><item><title><![CDATA[Ceddy Spaghetti Studios]]></title><description><![CDATA[An inside glimpse of my struggle with (unnecessarily) doing things by the book
and how it plagues my ability to get anything done. I’m not…]]></description><link>https://cedric.tech/blog/ceddy-spaghetti-studios/</link><guid isPermaLink="false">https://cedric.tech/blog/ceddy-spaghetti-studios/</guid><pubDate>Sun, 17 Feb 2019 11:55:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;strong&gt;An inside glimpse of my struggle with (unnecessarily) doing things by the book
and how it plagues my ability to get anything done.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I’m not sure if there’s a word for this, but I enjoy doing things as real as
possible; maybe better put, done by the book. It’s hard for me to articulate
what exactly I mean by that, so for the purpose of this post, I’ll explain a
simple example that I’ve come across recently.&lt;/p&gt;
&lt;p&gt;Think of a website, any website. I just thought of Twitter. Now, visit the site
in mind and locate the footer of the site. There you will most likely see multiple
links, probably some about the product, the company, the legal things, etc. I
would also bet there is a statement that looks something along the lines of:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;© &amp;lt;year&amp;gt; &amp;lt;company_name&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Am I right? You may be wondering, “Why is Cedric writing about footer copyright
notices?” Let me explain. My current side project is called unearth and recently
I’ve been designing and coding the landing page. Now, when I got to the footer,
&lt;em&gt;I wanted to do things as real as possible&lt;/em&gt; and decided to throw in the
aforementioned copyright notice, to make things look legit, you know? This is
the crazy part.&lt;/p&gt;
&lt;p&gt;Initially, I put &lt;code class=&quot;language-text&quot;&gt;© 2019 Unearth&lt;/code&gt;. A few minutes later, I thought, “Is that even
legal? What is Unearth, I don’t actually own a company by that name.”
After spending a few more minutes looking for inspiration, I decided to change
“Unearth” to “Unearth Labs” because that’s what Notion (&lt;a href=&quot;https://notion.so&quot;&gt;https://notion.so&lt;/a&gt;) did.&lt;/p&gt;
&lt;p&gt;Any normal person would have left it at that and moved on with their life, but
not me. Seeing the word “Unearth” repeated in the footer right below the logo
wasn’t sitting right with me, so once again I procrastinated further and sought
to fiddle with the copyright text more.&lt;/p&gt;
&lt;p&gt;Then it occurred to me: I’ve gone through a similar struggle before with a previous
side project. I went to the site and sure enough, there was some footer text
(though not a copyright notice) that said, “An experiment by Ceddy Spaghetti
Studios”. When building that previous project, I had seen one of my favorite
makers do this on one of their projects so I thought it would be cool if I did
so as well. I remember now sitting at my desk trying to come up with names of a
fake company to use and ultimately choosing “Ceddy Spaghetti Studios”.&lt;/p&gt;
&lt;p&gt;Upon this realization, I knew I had the text to complete the copyright notice
for unearth’s footer. This, however, came at a cost: I just spent thirty minutes
of my time which could’ve been spent going towards developing the core product.&lt;/p&gt;
&lt;p&gt;Although this example may seem insignificant in of itself, these type of situations
happen all the time when I’m building side projects. I battle with myself over
the silliest decisions only to waste time and stall the development, and
consequently, the launch of most of my projects. Due to this indecisiveness,
more often than not, the side project will go unfinished.&lt;/p&gt;
&lt;p&gt;I was originally going to write this post as a way of documenting and making
Ceddy Spaghetti Studios “official” (insert Michael Scott declaring bankruptcy
meme). But I guess this post also serves as a nice reminder and lesson to not
sweat the small stuff and instead focus on what really needs to get done.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Reddit's Save Functionality Sucks]]></title><description><![CDATA[The Problem I have been a Redditor for over six years and was a “lurker” for a year before
even creating my main account. During my time on…]]></description><link>https://cedric.tech/blog/reddits-save-functionality-sucks/</link><guid isPermaLink="false">https://cedric.tech/blog/reddits-save-functionality-sucks/</guid><pubDate>Mon, 04 Feb 2019 20:09:09 GMT</pubDate><content:encoded>&lt;h3&gt;The Problem&lt;/h3&gt;
&lt;p&gt;I have been a Redditor for over six years and was a “lurker” for a year before
even creating my main account. During my time on Reddit, I have come across
amazing content, such as helpful LifeProTips and great book recommendations. When
browsing dozens of posts and reading even more comments every day, it becomes
difficult trying to remember the most memorable content from a week, a month, or
even a year ago. Fortunately, the engineers at Reddit were smart enough to develop
a way to save your favorite posts and comments. Unfortunately, however, the save
functionality is nowhere near functional and is only slightly more useful if
you’re a Premium member.&lt;/p&gt;
&lt;p&gt;As a developer myself, I understand the need to monetize certain features of
your product in order to grow, but the problem with saving on Reddit is the fact
that the implementation is incomplete.&lt;/p&gt;
&lt;p&gt;For those unaware, saving things on Reddit as a non-Premium member works in the
following way:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;limited to 1000 saved things (posts and comments) total; once the limit is
reached, older things are replaced and essentially deleted from history&lt;/li&gt;
&lt;li&gt;saves are stored in reverse chronological order (latest to oldest) &lt;/li&gt;
&lt;li&gt;no way whatsoever to filter or sort saved content&lt;/li&gt;
&lt;li&gt;no searching capability is provided&lt;/li&gt;
&lt;li&gt;pagination limit on Reddit site is limited to 25 items, thus requiring users
to use the “Next Page” or “Prev Page” buttons a lot&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Due to the organization of saved content and lack of basic discovery tools like
filtering, searching, and sorting paired with the pagination limit, finding some
specific content becomes a pain with as little as a few dozen saved items.&lt;/p&gt;
&lt;p&gt;For members with Reddit Premium, some of the outlined pain points are addressed.
For example, organization of saved content is improved with the ability to create
categories (think folders) which allow users to group related content. I’ve also
heard that each category itself has a 1000 item limit rather than a hard 1000
limit for all saved content.&lt;/p&gt;
&lt;p&gt;However, there are still issues even if users are paying:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;no discovery tools (filter, search, or sort)&lt;/li&gt;
&lt;li&gt;categories disappear after Premium membership expires&lt;/li&gt;
&lt;li&gt;unable to rename or remove categories&lt;/li&gt;
&lt;li&gt;saves live on old.reddit.com (UI consistency issue if Redditor prefers “new”
Reddit design)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hopefully by now you can see how Reddit’s save feature is not functional from a
user’s perspective. What’s even more interesting in my opinion is the fact that
Reddit has the means to support the missing functionality. I know this because
their public API exposes the necessary endpoints to make it possible. That’s why
I’m creating a service that will improve Reddit’s poor implementation. &lt;/p&gt;
&lt;h3&gt;The Solution: unearth&lt;/h3&gt;
&lt;p&gt;The app is called “unearth” and is currently in the early stages of development.
I chose unearth because it’s suppose to represent the action of “digging through
your saved content and finding gems you had forgotten about”.&lt;/p&gt;
&lt;p&gt;With unearth, I hope to alleviate the pain of discovering saved content for
Redditors by adding the basic tools like searching and filtering while also
bringing the ability to group content to those without Premium memberships.&lt;/p&gt;
&lt;p&gt;I also have more ambitious goals for unearth which I think others might enjoy:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;native reminder system (think u/RemindMeBot for those familiar with the account)&lt;/li&gt;
&lt;li&gt;email updates with featured saved posts&lt;/li&gt;
&lt;li&gt;backup system (importing and exporting of saved items)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For those wondering, this would all be free and for the benefit of the users of
unearth. As of now, I have no intent of monetizing unearth and only want to
provide the best service possible for all users.&lt;/p&gt;
&lt;p&gt;Some of you may be asking, What’s my end goal? In an ideal world, I think it
would be amazing if the product team at Reddit came across unearth and decided
to improve Reddit’s save feature. If that doesn’t happen, I would be okay with
building this project and using it as leverage in order to land a job at Reddit.&lt;/p&gt;
&lt;p&gt;Want to &lt;strong&gt;stay up to date with unearth’s development&lt;/strong&gt; and &lt;strong&gt;get early beta
access&lt;/strong&gt; once it’s ready? &lt;strong&gt;Sign up for the unearth mailing list below!&lt;/strong&gt;&lt;/p&gt;
&lt;!-- Begin Mailchimp Signup Form --&gt;
&lt;link 
  href=&quot;//cdn-images.mailchimp.com/embedcode/horizontal-slim-10_7.css&quot;
  rel=&quot;stylesheet&quot;
  type=&quot;text/css&quot;&gt;
&lt;style type=&quot;text/css&quot;&gt;
	#mc_embed_signup{
    background:transparent;
    clear:left;
    font:14px Helvetica,Arial,sans-serif;
    width:100%;
  }
  #mc-embedded-subscribe {
    background: #007bff !important;
    color: #007bff;
  }
&lt;/style&gt;
&lt;div id=&quot;mc_embed_signup&quot;&gt;
  &lt;form
    action=&quot;https://tryunearth.us19.list-manage.com/subscribe/post?u=339a6a86e5e989d8d4632bca5&amp;amp;id=36bc4cb5eb&quot;
    method=&quot;post&quot;
    id=&quot;mc-embedded-subscribe-form&quot;
    name=&quot;mc-embedded-subscribe-form&quot;
    class=&quot;validate&quot; target=&quot;_blank&quot; novalidate
  &gt;
    &lt;div id=&quot;mc_embed_signup_scroll&quot;&gt;
      &lt;input
        type=&quot;email&quot; value=&quot;&quot; name=&quot;EMAIL&quot; class=&quot;email&quot;
        id=&quot;mce-EMAIL&quot; placeholder=&quot;email address&quot; required
      /&gt;
    &lt;!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups--&gt;
      &lt;div style=&quot;position: absolute; left: -5000px;&quot; aria-hidden=&quot;true&quot;&gt;
        &lt;input
          type=&quot;text&quot; name=&quot;b_339a6a86e5e989d8d4632bca5_36bc4cb5eb&quot;
          tabindex=&quot;-1&quot; value=&quot;&quot;
        /&gt;
      &lt;/div&gt;
      &lt;div class=&quot;clear&quot;&gt;
        &lt;input
          type=&quot;submit&quot; value=&quot;Subscribe&quot; name=&quot;subscribe&quot;
          id=&quot;mc-embedded-subscribe&quot; class=&quot;button&quot;
        /&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/form&gt;
&lt;/div&gt;
&lt;!--End mc_embed_signup--&gt;</content:encoded></item><item><title><![CDATA[Self Reflection]]></title><description><![CDATA[This piece was originally going to be called “Why I Write”. For better or worse
(and advised as okay by Paul Graham), I’ve since pivoted the…]]></description><link>https://cedric.tech/blog/self-reflection/</link><guid isPermaLink="false">https://cedric.tech/blog/self-reflection/</guid><pubDate>Fri, 21 Dec 2018 00:53:55 GMT</pubDate><content:encoded>&lt;p&gt;This piece was originally going to be called “Why I Write”. For better or worse
(and advised as okay by Paul Graham), I’ve since pivoted the main topic of this
post to instead focus more generally on my motivation to create—be it via
writing, programming, designing, or drawing. But this post does not only focus
on the motivation why I do these activities, rather, it also looks at why I don’t
do these things when required of me, namely academically-speaking.&lt;/p&gt;
&lt;!-- 
  Elaborate on why it was going to be &quot;why I write&quot; and how the shift in focus occurred
  &quot;why I write?&quot; turned into &quot;why do I partake in any creative endeavor?&quot;
  esp. since I should be doing so in school but ultimately don&apos;t
 --&gt;
&lt;!--
  Make note of why this is important - hopefully better understand myself
  and make the appropriate changes (makes sense with New Years right around the corner)
--&gt;
&lt;p&gt;Thus, through the inquisition of myself and some research, this essay aims to
answer the following questions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Can lazy people, who do not apply themselves academically, pursue creative
and/or mentally-demanding endeavors?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;What motivates these individuals?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Can said motivation be applied towards performing at a higher level academically?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!--
  Myself as case study
   - explain relationship w/ school
   - grades
   - general performance
--&gt;
&lt;!-- 
  With my own thoughts on the topic (refletion) &amp; answers from reddit,
  answer all three questions
 --&gt;
 &lt;!-- 
  With answers in mind, think about what can be changed and/or done differently
  in order to lead a better lifestyle in terms of school
  --&gt;</content:encoded></item><item><title><![CDATA[My Process of Building Side Projects]]></title><description><![CDATA[For those who don’t know, I’m a Computer Science major and I enjoy programming
outside of school and work. There’s something about getting…]]></description><link>https://cedric.tech/blog/building-side-projects/</link><guid isPermaLink="false">https://cedric.tech/blog/building-side-projects/</guid><pubDate>Tue, 18 Dec 2018 23:30:00 GMT</pubDate><content:encoded>&lt;p&gt;For those who don’t know, I’m a Computer Science major and I enjoy programming
outside of school and work. There’s something about getting to make whatever you
want while also having total ownership of a project that makes building side
projects so addicting. I’ve heard it compared to other hobbies such as gaming
or playing sports.&lt;/p&gt;
&lt;p&gt;Although many side projects may go unfinished or unreleased,
I feel as though there is still a lot of experience to gain from simply starting
a project in the first place. In this post, I will walk you through my process
of coming up with an idea of what to make, taking said idea and turning it into
something tangible, to putting the project out in the world.&lt;/p&gt;
&lt;p&gt;Before we begin, I will warn you that my process is by no means perfect. As I’ll
discuss later, there are a few things I would like to do differently in the future
since my current process of building side projects can seem anomalous at times.&lt;/p&gt;
&lt;h4&gt;Coming Up with an Idea 💡&lt;/h4&gt;
&lt;p&gt;In order to build something, you first need an idea. I find this to be one of
the hardest parts of side projects. This is simply because if there is no idea,
there can’t be a project. To get around this potential roadblock, I like to
examine my own daily life and see what areas I could possibly speed up or
improve. Having intimate knowledge of the problem you’re trying to solve will
make building a side project that much easier.&lt;/p&gt;
&lt;h4&gt;Preliminary Research 🧐&lt;/h4&gt;
&lt;p&gt;Once I have an idea in mind, I like to see what existing solutions already exist.
Now, if I find more than a few existing projects that solve the same issue that
I was hoping to tackle, then I usually will not continue with that project. This
is one of those situations that I mentioned earlier where I’m sort of peculiar—
the fact that there are already projects that try to solve an issue means that
your idea has already been validated—this is good news! Don’t be discouraged if
there are already other projects out there. &lt;/p&gt;
&lt;p&gt;I find that if I do try to tackle such problems, I will often mimic the existing
projects’ solutions rather than building something unique. Although imitating one
project’s solution to help you solve an issue can be helpful, I have found that
relying too much on this method then makes it harder for me to build projects that
require unique and sophisticated solutions later on.&lt;/p&gt;
&lt;h4&gt;Choosing a Tech Stack 🥞&lt;/h4&gt;
&lt;p&gt;Now that I have an idea and know I want to commit to this side project, the next
thing I do is research what tech stack I will use to turn the idea into a real
thing. This step assumes you’ve already determined the area or type of project
you are going to make—be it a browser extension, CLI tool, a web or mobile app,
etc. I love JavaScript and thanks to the run-time environment Node.js, I can make
projects as just about any application type. With the language selected, I then
will decide if I want to use any libraries that could help speed up the
development time and if I’m unfamiliar with a particular library, I will read
their documentation.&lt;/p&gt;
&lt;h4&gt;Coding → MVP 🦴&lt;/h4&gt;
&lt;p&gt;Time for the fun part: coding! With an idea in mind and the right tools selected
to build said idea, I get to work. Programming can be a double-edged sword when
creating a side project: when it’s going well, I love it. But when I get stuck on
an issue that I can’t immediately solve, I also really hate it. Throughout the
development process, these two emotions can cycle between overpowering one
another. At times, I feel so defeated by a bug and want to give up entirely only
to get the biggest boost of confidence after stepping away and figuring out how
to squash the bug. I like to say making side projects can be like war—it’s
essentially a series of battles composed of wins and losses, me versus my code.&lt;/p&gt;
&lt;p&gt;Eventually I come out victorious and emerge with something that works and solves
the original problem. This will almost always be a minimum viable product, or MVP.
The MVP serves as the skeleton for the finished product without all the bells and
whistles that will eventually make it complete.&lt;/p&gt;
&lt;h4&gt;Break from Code—Design Time 🎨&lt;/h4&gt;
&lt;p&gt;This is the step in the process where I like to start thinking about how I will
market my side project while also giving myself a break from coding. Like a
newborn baby, the project needs a name. This can be as simple or extravagant as
you would like. Once a name is selected, I think about branding. What will the
main colors of the project be? What graphic or logo can best represent this
project? What font? Having answers to those questions then allows me to put my
creativity to use. Using design software (I’m a big fan of Sketch), I will put
together a press kit or package of promotional material (namely good-looking
graphics) to be used later on for open graph meta tags or product launches on
sites like Product Hunt or Reddit.&lt;/p&gt;
&lt;h4&gt;Wrapping Up 🎀&lt;/h4&gt;
&lt;p&gt;Seem like a long process yet? Luckily, we’re just about done. After my creative
sprint, I go back to programming and flesh out the MVP. On goes the remaining
features I thought would be useful and any bug fixes that are critical.&lt;/p&gt;
&lt;p&gt;Note: there will always be bugs, so do not try to fix them all before launching
your product.&lt;/p&gt;
&lt;h4&gt;Launching 🚀&lt;/h4&gt;
&lt;p&gt;By now, I have a finished product and I’m ready to show it to the world. With the
press kit I made earlier, I hit up several relevant subreddits to the project I
just made and create posts that describe what the project is, why I made it, and
where to find it. Posting on Reddit will give my project some exposure and
feedback that I can then use to fix or tweak before launching on Product Hunt.&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;Looking Ahead 🔭&lt;/h4&gt;
&lt;p&gt;After having gone through this entire process several times and starting the
process but not finishing many more times, I feel as though there is room
for improvement.&lt;/p&gt;
&lt;p&gt;Firstly, deciding whether or not to build something based on the number of
existing projects is kind of silly. Even if there are many solutions out there,
your take and solution to the problem is unique and therefore could end up
being a better solution than all the other projects.&lt;/p&gt;
&lt;p&gt;Lastly, it’s really important to get your project out in the hands of the public
as soon as possible as this will significantly improve your chances of actually
completing it. Too many times to count have I worked on a project in isolation
without letting others try it which resulted in a “failed” launch. This is simply
due to the fact that I assumed I knew what people would want, rather than actually
letting them tell me. A costly mistake if you’re hoping to have users other than
yourself use the project.&lt;/p&gt;
&lt;p&gt;So what’s in store? I hope to work on the above issues while also continually
improving the process I’ve since been following. I feel as though the side
projects I’ve made up until this point have been quite small in scope, so in the
future I also plan on taking on larger problems that require more complex
solutions. Finally, I would love to make something that I can monetize and earn
some extra side income from.&lt;/p&gt;
&lt;p&gt;I guess I already have some goals for 2019.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Advice for Beginners]]></title><description><![CDATA[Originally published on the r/learnprogrammig subreddit. For those struggling and comparing themselves to others… I’m right there with you…]]></description><link>https://cedric.tech/blog/advice-for-beginners/</link><guid isPermaLink="false">https://cedric.tech/blog/advice-for-beginners/</guid><pubDate>Sat, 15 Dec 2018 17:15:40 GMT</pubDate><content:encoded>&lt;p&gt;&lt;em&gt;Originally published on the r/learnprogrammig subreddit.&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;For those struggling and comparing themselves to others…&lt;/h4&gt;
&lt;p&gt;I’m right there with you. I’ve been programming for about three years now and
although I wouldn’t consider myself a beginner, I’m by no means an expert and
still feel like programming can be hard or that the code I write is shit. I
can’t help but see all of the other developers I follow on social media and
the projects they’re making and feel like I’ll never get there.&lt;/p&gt;
&lt;p&gt;The best advice I’ve heard until recently to dealing with this are sayings like
“don’t compare your beginning to someone else’s middle”. That makes sense and I
understood what it meant, but I was never really satisfied with when my “middle”
would manifest - I felt like no matter how many projects I made, I was not
progressing.&lt;/p&gt;
&lt;p&gt;That is until I heard Ira Glass’ advice for beginners.&lt;/p&gt;
&lt;p&gt;Simply put, Glass describes the idea that there is a gap between our good taste
(the cool projects we aspire to one day write) and the stuff we actually make
(the code we write/the projects we’re actually making). The gap represents our
dissatisfaction with our work compared to the work that we aspire to someday
create.&lt;/p&gt;
&lt;p&gt;I can’t summarize Glass’ words in their full glory but luckily the transcript
isn’t too long, so I’ll paste it below:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Nobody tells this to people who are beginners, and I really wish somebody had&lt;/em&gt;
&lt;em&gt;told this to me.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;All of us who do creative work, we get into it because we have good taste. But&lt;/em&gt;
&lt;em&gt;it’s like there is this gap. For the first couple years that you’re making&lt;/em&gt;
&lt;em&gt;stuff, what you’re making isn’t so good. It’s not that great. It’s trying to&lt;/em&gt;
&lt;em&gt;be good, it has ambition to be good, but it’s not that good.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;But your taste, the thing that got you into the game, is still killer. And&lt;/em&gt;
&lt;em&gt;your taste is good enough that you can tell that what you’re making is kind&lt;/em&gt;
&lt;em&gt;of a disappointment to you. A lot of people never get past that phase. They&lt;/em&gt;
&lt;em&gt;quit.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Everybody I know who does interesting, creative work they went through years&lt;/em&gt;
&lt;em&gt;where they had really good taste and they could tell that what they were&lt;/em&gt;
&lt;em&gt;making wasn’t as good as they wanted it to be. They knew it fell short.&lt;/em&gt;
&lt;em&gt;Everybody goes through that.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;And if you are just starting out or if you are still in this phase, you gotta&lt;/em&gt;
&lt;em&gt;know its normal and the most important thing you can do is do a lot of work.&lt;/em&gt;
&lt;em&gt;Do a huge volume of work. Put yourself on a deadline so that every week or&lt;/em&gt;
&lt;em&gt;every month you know you’re going to finish one story. It is only by going&lt;/em&gt;
&lt;em&gt;through a volume of work that you’re going to catch up and close that gap.&lt;/em&gt;
&lt;em&gt;And the work you’re making will be as good as your ambitions.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;I took longer to figure out how to do this than anyone I’ve ever met. It&lt;/em&gt;
&lt;em&gt;takes awhile. It’s gonna take you a while. It’s normal to take a while.&lt;/em&gt;
&lt;em&gt;You just have to fight your way through that.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;—Ira Glass&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I’m not sure about you, but this explanation about the pursuit of evolving our
creativity made me have a light bulb moment.&lt;/p&gt;
&lt;p&gt;I think Glass perfectly describes why we shouldn’t “compare our beginning to
someone else’s middle” while at the same time sheds light on the true struggle
we as beginners go through while honing our creative skills (such as programming).
I also felt like the idea to create a volume of work in order to close the gap
really goes in hand with Malcolm Gladwell’s “10,000-Hour Rule”.&lt;/p&gt;
&lt;p&gt;Apologies for the wall of text, I’ll stop here. If you’re more of a visual
learner, the comic Zen Pencils has an excellent interpretation of Ira Glass’
words.&lt;sup&gt;1&lt;/sup&gt; Happy coding and hopefully some of you will
have found this as insightful as I did!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;EDIT&lt;/strong&gt;: I’m ecstatic that so many of you have found this advice helpful. I
made Glass’ advice into a nice little r/GetMotivated-esque poster.&lt;sup&gt;2&lt;/sup&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://zenpencils.com/comic/90-ira-glass-advice-for-beginners/&quot;&gt;https://zenpencils.com/comic/90-ira-glass-advice-for-beginners/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://i.redd.it/25ueejz4jj321.png&quot;&gt;https://i.redd.it/25ueejz4jj321.png&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content:encoded></item><item><title><![CDATA[I Have Moved]]></title><description><![CDATA[No, I haven’t moved physically. Rather, I’ve moved my blog. My first blog,
 coffee. code. cedric , was hosted on Medium when that was the…]]></description><link>https://cedric.tech/blog/i-have-moved/</link><guid isPermaLink="false">https://cedric.tech/blog/i-have-moved/</guid><pubDate>Wed, 12 Dec 2018 21:48:40 GMT</pubDate><content:encoded>&lt;p&gt;No, I haven’t moved physically. Rather, I’ve moved my blog. My first blog,
&lt;em&gt;coffee. code. cedric&lt;/em&gt;, was hosted on Medium when that was the cool thing to do.
I even had a custom domain for my publication before that
&lt;a href=&quot;https://help.medium.com/hc/en-us/articles/115003053487%0A-Custom-Domains-service-deprecation&quot;&gt;feature was steamrolled&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To be honest, I struggled with keeping the blog up-to-date. In many of my posts,
I would make commitments to write more often which turned out to never come true.
Not only that, I felt as though I had limited myself in the number of topics I
could write about since the original blog was geared towards programming and
Computer Science.&lt;/p&gt;
&lt;p&gt;Thus, when my old domain expired and the link to my Medium publication broke, I
decided to not fix it and instead told myself that I will host my own blog. Along
with that, I also made the decision to not limit myself in the type of content I
write about. What does that mean for this blog then? Well, anything goes. Be it
related to programming, philosophy, design, or my day, I won’t think twice and
worry about whether or not a post should belong on this blog.&lt;/p&gt;
&lt;p&gt;Although I pretty much failed at having a blog before, I do enjoy writing (even
if I’m bad at it) and hope this blog will allow me to pursue this passion further.
So for now, I bid you adieu and I look forward to see where things go from here.&lt;/p&gt;</content:encoded></item></channel></rss>